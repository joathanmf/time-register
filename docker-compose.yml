services:
  db:
    image: postgres:18-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-time_register_development}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - rails_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:8-alpine
    volumes:
      - redis_data:/data
    networks:
      - rails_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails server -b 0.0.0.0"
    environment:
      DATABASE_HOST: db
      DATABASE_NAME: ${POSTGRES_DB:-time_register_development}
      DATABASE_USER: ${POSTGRES_USER:-postgres}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      RAILS_ENV: development
    volumes:
      - .:/app
      - bundle_cache:/usr/local/bundle
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - rails_network

  sidekiq:
    build: .
    command: bundle exec sidekiq
    environment:
      DATABASE_HOST: db
      DATABASE_USER: ${POSTGRES_USER:-postgres}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      DATABASE_NAME: ${POSTGRES_DB:-time_register_development}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      RAILS_ENV: development
    volumes:
      - .:/app
      - bundle_cache:/usr/local/bundle
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - rails_network

networks:
  rails_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  bundle_cache: